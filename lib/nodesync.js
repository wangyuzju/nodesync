// Generated by CoffeeScript 1.6.3
(function() {
  var CONFIG, fc, fs, init, path, remote, url, watch;

  fs = require('fs');

  url = require('url');

  path = require('path');

  watch = require("watch-project");

  remote = require('./upload');

  fc = require('./filechange');

  CONFIG = require('./config');

  console.error = function(s) {
    return console.log("\u001b[1;31m" + s + "\u001b[0m");
  };

  console.info = function(s) {
    return console.log("\u001b[36m" + s + "\u001b[0m");
  };

  console.warn = function(s) {
    return console.log("\u001b[35m" + s + "\u001b[0m");
  };

  init = function() {
    var CONFIG_LOCAL_CHANGE_DIR, CONFIG_LOCAL_WATCH_DIR, CONFIG_LOCAL_WATCH_PATH, target;
    target = path.resolve(process.argv[2] || "", '.m3dsync_config');
    CONFIG = CONFIG.load(target);
    if (!CONFIG) {
      return;
    }
    CONFIG_LOCAL_WATCH_PATH = path.resolve(CONFIG.path);
    if (!fs.existsSync(CONFIG_LOCAL_WATCH_PATH)) {
      console.error("Error: ");
      console.log("\tWatching directory '" + CONFIG_LOCAL_WATCH_PATH + "' is not Exist!");
      return;
    }
    CONFIG_LOCAL_CHANGE_DIR = path.dirname(CONFIG_LOCAL_WATCH_PATH);
    CONFIG_LOCAL_WATCH_DIR = path.basename(CONFIG_LOCAL_WATCH_PATH);
    process.chdir(CONFIG_LOCAL_CHANGE_DIR);
    console.log("Local : >>>");
    console.log("\tWatching   ... '" + CONFIG_LOCAL_WATCH_PATH + "'");
    console.log("\tConnecting ... '" + CONFIG.host + "'");
    console.log("");
    remote.connect(CONFIG.host, CONFIG.pathto);
    watch(CONFIG_LOCAL_WATCH_DIR, function(e) {
      console.log("Local: >>>\u001b[1;4m" + e.type + "\u001b[0m [" + e.filename + "]");
      console.log("   old:\t" + e.oid);
      console.log("   new:\t" + (e.nid || e.oid));
      switch (e.type) {
        case 'mkdir':
          return remote.mkdir(e.filename);
        case 'change':
        case 'create':
          return remote.save(e.filename, e.oid);
        case 'delete':
        case 'rmdir':
          return remote["delete"](e.filename, e.oid);
        case 'mvfile':
        case 'mvdir':
          return remote.move(e.oname, e.oid, e.filename);
      }
    });
    return process.on('SIGINT', function() {
      return process.exit();
    });
  };

  module.exports.run = init;

}).call(this);
