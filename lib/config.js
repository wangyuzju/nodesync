// Generated by CoffeeScript 1.6.3
(function() {
  var EOL, fs, genConfFromSample, loadConfig, path;

  fs = require('fs');

  path = require('path');

  EOL = (require('os')).EOL;

  genConfFromSample = function(confFile) {
    var defaultValue, dir, i, initConfig, j, key, params, resultValue, ret, stdin, stdout, tips, value, _ref;
    initConfig = require('config_sample');
    if (!confFile) {
      console.log("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
      console.info("第一次使用程序，没有找到当前项目的配置文件，请按照提示输入相应参数 ...");
      console.log("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
    } else {
      try {
        initConfig.conf = JSON.parse(fs.readFileSync(confFile));
      } catch (_error) {
        console.error("the configuration file '" + confFile + "' is not a valid JSON file, please check the syntax");
      }
    }
    stdin = process.stdin;
    stdout = process.stdout;
    stdin.resume();
    stdin.setEncoding('utf8');
    dir = process.cwd();
    params = [];
    defaultValue = [];
    resultValue = [];
    tips = initConfig.desc;
    i = 0;
    _ref = initConfig.conf;
    for (key in _ref) {
      value = _ref[key];
      params[i] = key;
      defaultValue[i] = value;
      i++;
    }
    j = 0;
    ret = {};
    stdout.write("" + tips[j] + " 当前值 \"" + defaultValue[j] + "\" \n" + params[j] + " :");
    return stdin.on('data', function(chunk) {
      if (chunk === EOL) {
        resultValue[j] = defaultValue[j];
      } else {
        resultValue[j] = chunk.trim().replace(/^["']/, '').replace(/["']$/, '');
      }
      j++;
      if (j < i) {
        return stdout.write("请输入" + tips[j] + " 当前值 \"" + defaultValue[j] + "\" \n" + params[j] + " :");
      } else {
        j = -1;
        while (++j < i) {
          ret[params[j]] = resultValue[j];
        }
        console.info("成功保存以下配置保存到 '.m3dsync_config' 请重新执行程序开始监控");
        console.log("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
        console.log(ret);
        console.log("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
        console.info("如需修改配置，直接编辑 '.m3dsync_config' 文件即可");
        fs.writeFileSync('.m3dsync_config', JSON.stringify(ret, null, '  '));
        return process.exit();
      }
    });
  };

  loadConfig = function(confFile) {
    var config, e;
    try {
      config = fs.readFileSync(confFile);
      try {
        config = JSON.parse(config);
        console.log("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
        console.log("+ Using configuration file: " + confFile);
        console.log("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
        return config;
      } catch (_error) {
        console.error("The configuration file \n\t" + confFile + "\nis not a valid JSON file, please check the syntax");
      }
    } catch (_error) {
      e = _error;
      genConfFromSample();
      return void 0;
    }
  };

  module.exports = {
    load: loadConfig,
    create: genConfFromSample
  };

}).call(this);
